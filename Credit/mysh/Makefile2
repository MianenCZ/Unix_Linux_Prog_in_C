
.PHONY: all val release setdebug debug install clean cltest setdebug

SHELL = /bin/sh
CC = /usr/bin/gcc -ggdb3
CFLAGS = -std=c99 -Wall -Wextra -ggdb3
INCLUDES = -I Includes -L /lib/x86_64-linux-gnu/ -l readline
OUT = ./mysh
TARGETS = callbin.o mysh.o getcmd.o execcmd.o cd.o fd_getline.o myshval.o exit.o
DFLAGS = -D SHIT
TESTFILE = mytests/Phase01.mysh

all: debug

val: compile
	valgrind --leak-check=full --show-leak-kinds=all $(OUT) $(TESTFILE)
	#valgrind --leak-check=full --show-leak-kinds=all $(OUT) -c "echo A;echo B;echo C\n"
release: compile

debug: setdebug compile

setdebug:
	echo $(DFLAGS)
	DFLAGS += -D 
	DFLAGS += DEBUG
	echo $(DFLAGS)
	
compile: clean $(TARGETS)
	$(CC) $(CFLAGS) $(INCLUDES) -lfl $(TARGETS) -o $(OUT)
	
%.o: %.c
	$(CC) $(CFLAGS) $(INCLUDES) $(DFLAGS) $<

getcmd.o:
	flex getcmd.c
	$(CC) $(CFLAGS) $(DFLAGS) $(INCLUDES) -c lex.yy.c -o getcmd.o
	@rm lex.yy.c

clean:
	-@rm $(TARGETS)
	-@rm $(OUT)

install:
	cp mysh /user/bin

test: cltest
	gcc -I Includes -D TEST fd_getline.c -o TEST_fd_getline.out

cltest:
	-@rm TEST_fd_getline.out
